package javaPro3._05_21.operators;

public class ConditionOperators {
    public static void main(String[] args) {

        boolean logic1 = true;
        boolean logic2 = false;
        System.out.println(logic1);
        System.out.println(logic2);

        // Какие операции своим результатом дают логические значения?
        /*
        ОПЕРАТОРЫ СРАВНЕНИЯ:
        1) == 'эквивалентно'
        2) != 'не эквивалентно'
        3) > 'больше'
        4) >= 'больше или равно'
        5) < 'меньше'
        6) <= 'меньше или равно'

        ЛОГИЧЕСКИЕ ОПЕРАТОРЫ
        применяются только для операций с логическими переменными
        или результатом логического выражения:

        1) логическое 'И' - &&
        2) логическое 'ИЛИ' - ||
        3) логическое 'НЕ' (отрицание) - !
         */

        /**
         * Conditional 'and' (&&) - "логическое умножение"
         * результат = логическая переменная (выражение) №1 && логическая переменная (выражение) №2
         * результат будет иметь значение true ТОГДА И ТОЛЬКО ТОГДА, когда ВСЕ переменные будут иметь значение true
         */

        boolean resultConditionalAND = logic1 && logic2;
        System.out.println("Результат оператора '&&' : " + resultConditionalAND);


        /**
         * Conditional 'or' (||) - "логическое сложение"
         * результат = логическая переменная (выражение) №1 || логическая переменная (выражение) №2
         *
         * результат будет иметь значение true ТОГДА, когда ХОТЯ БЫ ОДНА из переменных будет иметь значение true
         */

        boolean resultConditionalOR = logic1 || logic2;
        System.out.println("Результат оператора '||' : " + resultConditionalOR);


        /**
         * Conditional 'not' (!) - "логическое отрицание"
         * результат = ! логическая переменная (выражение) №1
         *
         * результат будет иметь противоположное значение переменной к которой ее применили
         */

        boolean resultConditionalNOT = !logic1;
        System.out.println("Результат оператора '!' : " + resultConditionalNOT);
    }
}
